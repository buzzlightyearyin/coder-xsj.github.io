一、故障根因

AR28 的 GigabitEthernet 0/0/2 接口出方向配置了针对源 IP 地址为 AR32 的 LoopBack0 的流量过滤行为。

二、故障分析

2.1 故障重现

首先在 AR32 上指定自身 LoopBack0 接口为源，去 ping IS-IS 区域中相应设备的 IP 地址，验证故障现象，这里只输出无法访问的地址，输出结果如下：

ping -a 10.5.1.32 10.5.1.30
ping -a 10.5.1.32 10.5.1.31	# 不通
ping -a 10.5.1.32 10.5.1.34

ping -a 10.5.1.32 10.5.231.31	# 不通
ping -a 10.5.1.32 10.5.234.31	# 不通

ping -a 10.5.1.32 10.5.134.34	
ping -a 10.5.1.32 10.5.234.34	# 不通

ping -a 10.5.1.32 10.5.134.30 
ping -a 10.5.1.32 10.5.230.30

由以上输出结果可知：AR32 的 LoopBack0 无法访问 AR34 的 GigabitEthernet 0/0/1 以及 AR31 的全部接口，故障真实存在，根据故障现象，自上而下分层分析故障原因。

首先，检查 AR32 的路由表中是否学习到 AR31 和 AR34 相应的路由，判断是否存在控制层面故障。

2.2 检查 AR32 的路由表

在 AR32 上通过 display ip routing-table | include ASE 检查是否学习到 IS-IS 区域内的路由，输出结果如下：

<AR32>display ip routing-table | include ASE
Route Flags: R - relay, D - download to fib
------------------------------------------------------------------------------
Routing Tables: Public
         Destinations : 18       Routes : 18       

Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface

10.5.1.30/32  O_ASE   150  1           D   10.5.232.28     GigabitEthernet0/0/0
10.5.1.31/32  O_ASE   150  1           D   10.5.232.28     GigabitEthernet0/0/0
10.5.1.34/32  O_ASE   150  1           D   10.5.232.28     GigabitEthernet0/0/0
10.5.134.0/24  O_ASE   150  1           D   10.5.232.28     GigabitEthernet0/0/0
10.5.230.0/24  O_ASE   150  1           D   10.5.232.28     GigabitEthernet0/0/0
10.5.231.0/24  O_ASE   150  1           D   10.5.232.28     GigabitEthernet0/0/0
10.5.234.0/24  O_ASE   150  1           D   10.5.232.28     GigabitEthernet0/0/0

由以上输出结果可知：AR32 的路由表中存在 IS-IS 区域相应设备的路由，包含 AR34 的 GigabitEthernet 0/0/1 以及 AR31 的全部接口

2.3 检查 AR31 和 AR34 的路由表

进一步检查 AR31 和 AR34 的路由表，判断是否有回包路由，输出结果如下：

<AR31>display ip routing-table 10.5.1.32
Route Flags: R - relay, D - download to fib
------------------------------------------------------------------------------
Routing Table : Public
Summary Count : 1
Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface

      10.5.1.32/32  ISIS-L2 15   74          D   10.5.231.28     GigabitEthernet0/0/2

<AR34>display ip routing-table 10.5.1.32
Route Flags: R - relay, D - download to fib
------------------------------------------------------------------------------
Routing Table : Public
Summary Count : 2
Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface

        0.0.0.0/0   ISIS-L1 15   10          D   10.5.234.31     GigabitEthernet0/0/1
                    ISIS-L1 15   10          D   10.5.134.30     GigabitEthernet0/0/0

由以上输出结果可知：AR31 的路由表中存在 AR32 的 LoppBack0 接口地址路由，AR34 的路由表中存在默认路由，说明 AR28 上的双向引入正确无误，初步判断控制层面不存在故障，进一步检查数据转发层面是否存在问题。

2.4 判断是否存在基于目标 IP 地址的流量过滤

数据层面无法转发流量的原因有很多方面，首先考虑基于目的 IP 地址的流量过滤。

在 AR32 上不指定源 IP 地址 ping 如下地址（基于目的地址的测试），检查到达 AR34 的 GigabitEthernet 0/0/1 接口以及 AR31 的全部接口，结果输出如下：

<AR34>ping 10.5.1.31
  PING 10.5.1.31: 56  data bytes, press CTRL_C to break
    Reply from 10.5.1.31: bytes=56 Sequence=1 ttl=255 time=20 ms
    Reply from 10.5.1.31: bytes=56 Sequence=2 ttl=255 time=30 ms
    Reply from 10.5.1.31: bytes=56 Sequence=3 ttl=255 time=20 ms
    Reply from 10.5.1.31: bytes=56 Sequence=4 ttl=255 time=30 ms
    Reply from 10.5.1.31: bytes=56 Sequence=5 ttl=255 time=10 ms

  --- 10.5.1.31 ping statistics ---
    5 packet(s) transmitted
    5 packet(s) received
    0.00% packet loss
    round-trip min/avg/max = 10/22/30 ms

<AR34>ping 10.5.231.31
  PING 10.5.231.31: 56  data bytes, press CTRL_C to break
    Reply from 10.5.231.31: bytes=56 Sequence=1 ttl=255 time=30 ms
    Reply from 10.5.231.31: bytes=56 Sequence=2 ttl=255 time=20 ms
    Reply from 10.5.231.31: bytes=56 Sequence=3 ttl=255 time=20 ms
    Reply from 10.5.231.31: bytes=56 Sequence=4 ttl=255 time=20 ms
    Reply from 10.5.231.31: bytes=56 Sequence=5 ttl=255 time=10 ms

  --- 10.5.231.31 ping statistics ---
    5 packet(s) transmitted
    5 packet(s) received
    0.00% packet loss
    round-trip min/avg/max = 10/20/30 ms

<AR34>ping 10.5.234.31
  PING 10.5.234.31: 56  data bytes, press CTRL_C to break
    Reply from 10.5.234.31: bytes=56 Sequence=1 ttl=255 time=10 ms
    Reply from 10.5.234.31: bytes=56 Sequence=2 ttl=255 time=20 ms
    Reply from 10.5.234.31: bytes=56 Sequence=3 ttl=255 time=30 ms
    Reply from 10.5.234.31: bytes=56 Sequence=4 ttl=255 time=20 ms
    Reply from 10.5.234.31: bytes=56 Sequence=5 ttl=255 time=20 ms

  --- 10.5.234.31 ping statistics ---
    5 packet(s) transmitted
    5 packet(s) received
    0.00% packet loss
    round-trip min/avg/max = 10/20/30 ms

<AR34>ping 10.5.234.34
  PING 10.5.234.34: 56  data bytes, press CTRL_C to break
    Reply from 10.5.234.34: bytes=56 Sequence=1 ttl=255 time=1 ms
    Reply from 10.5.234.34: bytes=56 Sequence=2 ttl=255 time=1 ms
    Reply from 10.5.234.34: bytes=56 Sequence=3 ttl=255 time=1 ms
    Reply from 10.5.234.34: bytes=56 Sequence=4 ttl=255 time=1 ms
    Reply from 10.5.234.34: bytes=56 Sequence=5 ttl=255 time=1 ms

  --- 10.5.234.34 ping statistics ---
    5 packet(s) transmitted
    5 packet(s) received
    0.00% packet loss
    round-trip min/avg/max = 1/1/1 ms

由以上输出结果可知：AR28、AR31、AR34 没有配置基于目的地址为 AR31 的全部接口和 AR34 的 GigabitEthernet 0/0/1 接口地址的流量过滤

进一步判断沿途某些设备配置了针对源 IP 地址（AR32 的 LoopBack0）的流量过滤。

2.5 检查是否存在基于源 IP 地址的流量过滤

使用 AR32 的 LoopBack0 接口地址作为源地址进行 tracert 验证，结果输出如下：

<AR32>tracert -a 10.5.1.32 10.5.1.31

 traceroute to  10.5.1.31(10.5.1.31), max hops: 30 ,packet length: 40,press CTRL_C to break 

 1 10.5.232.28 30 ms  20 ms  20 ms 

 2  *  *  * 

<AR32>tracert -a 10.5.1.32 10.5.231.31

 traceroute to  10.5.231.31(10.5.231.31), max hops: 30 ,packet length: 40,press CTRL_C to break 

 1 10.5.232.28 30 ms  20 ms  30 ms 

 2  *  *  * 

<AR32>tracert -a 10.5.1.32 10.5.234.31

 traceroute to  10.5.234.31(10.5.234.31), max hops: 30 ,packet length: 40,press CTRL_C to break 

 1 10.5.232.28 30 ms  20 ms  20 ms 

 2  *  *  * 

<AR32>tracert -a 10.5.1.32 10.5.234.34

 traceroute to  10.5.234.31(10.5.234.34), max hops: 30 ,packet length: 40,press CTRL_C to break 

 1 10.5.232.28 1 ms  10 ms  40 ms 

 2  *  *  * 

由以上输出结果可知：AR32 指定源地址的 tracert 报文都是在 AR28 和 AR31 之间出现超时，初步判断 AR28 与 AR31 之间基于源 IP 地址的流量过滤。

进一步判断上述流量过滤策略配置具体位置。

2.6 检查过滤策略具体配置位置

在 AR32 上以 LoopBack0 作为源地址 ping 10.5.231.31 进行测试，同时在 AR31 查看 GigabitEthernet 0/0/2 接口的相关信息，做前后的对比，输出结果如下：
 
<AR31>display interface GigabitEthernet 0/0/2
第一次：
GigabitEthernet0/0/2 current state : UP
Line protocol current state : UP
.....<略>

Input:  349 packets, 460497 bytes
  Unicast:                 22,  Multicast:                 325
  Broadcast:                2,  Jumbo:                       0
  Discard:                  0,  Total Error:                   0

第二次：
GigabitEthernet0/0/2 current state : UP
Line protocol current state : UP
.....<略>

Input:  349 packets, 460497 bytes
  Unicast:                 22,  Multicast:                 325
  Broadcast:                2,  Jumbo:                       0
  Discard:                  0,  Total Error:                   0

由以上输出结果可知：AR32 上多次进行 ping 测试，在 AR31 的 GigabitEthernet 0/0/2 接口观察到 UP，但是 input 方向收到单播报文并未增加，由此判断 AR28 没有将数据包发送出去。

2.7 排除其它设备否存在流量过滤策略

在 AR31 和 AR34 上进一步检查是否存在其他流量过滤策略，输出结果如下：

<AR31>display  acl all 
 Total quantity of nonempty ACL number is 0 

<AR34>display  acl all 
 Total quantity of nonempty ACL number is 0 

由以上输出结果可知，AR31 与 AR34 上本身没有定义流量过滤策略

2.8 排查是否配置反向流量过滤策略

在 AR34 上针对 AR32 的 LoopBack0 做路由跟踪，测试反方向访问数据是否存在过滤行为，输出结果如下：

<AR34>tracert -a 10.5.1.34 10.5.1.32

 traceroute to  10.5.1.32(10.5.1.32), max hops: 30 ,packet length: 40,press CTRL
_C to break 

 1 10.5.234.31 30 ms  20 ms  20 ms 
 2 10.5.231.28 20 ms  30 ms 10.5.230.28 20 ms 
 3 10.5.232.32 40 ms  20 ms  20 ms 

由以上输出结果可知：AR34 针对 AR32 的 LoopBack0 地址做路由跟踪是成功的，所以可以排除 AR34 和 AR32 的反方向的数据包过滤

2.9 综合分析

综上所述，AR28 的 GigabitEthernet 0/0/2 接口出方向配置了针对源 IP 地址为 AR32 的 LoopBack0 的流量过滤行为。

三、解决方案

3.1 在 AR28 上修改 ACL 放行相应的流量，执行如下命令：
system-view			// 进入系统视图
    interface  GigabitEthernet 0/0/2	// 进入接口视图
    display this			// 查看当前接口下是否配置调用 acl 的过滤策略
    acl [对应 acl 序号]			// 进入 acl 视图
        rule permit source x.x.x.x x.x.x.x	// 放行相应的流量

执行完上述命令后，在 AR32 上执行如下命令测试无法访问的 IP 地址，验证故障是否排除：
ping -a 10.5.1.32 10.5.1.31
ping -a 10.5.1.32 10.5.231.31
ping -a 10.5.1.32 10.5.234.31
ping -a 10.5.1.32 10.5.234.34

3.2 高可能性
如果仍有某些地址无法访问，则可能使用高级 ACL 过滤报文，需要执行如下命令：
system-view			// 进入系统视图
    display acl all			// 查看所有 acl
    acl [对应 acl 序号]			// 进入 acl 视图
        rule permit source x.x.x.x x.x.x.x	// 放行相应的流量


执行完上述命令，如果故障已经排除，则需要指导客户保存所有设备配置并提交上述故障排查报告：
return		// 返回用户视图
save		// 保存设备配置
y		// 确认保存配置

3.3 如果执行完上述命令后，故障仍未排除，需要客户提供完整的设备配置信息或派遣一线工程师到达客户现场进行故障排查，同时并拨打华为 400 服务热线请求华为专家的协助，谢谢！
