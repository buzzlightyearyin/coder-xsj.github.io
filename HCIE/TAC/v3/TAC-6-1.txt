一、故障根因

AR28 的 GigabitEthernet 0/0/2 接口出方向配置了针对源 IP 地址为 AR32 的 LoopBack0 的流量过滤行为。

二、故障分析

2.1 故障现象确认

在 AR32 上以自身 LoopBack0 接口地址为源地址，去 ping  IS-IS 区域中相应设备的 ip 地址，验证故障现象，这里只输出无法访问的地址，输出结果如下：

ping -a 10.5.1.32 10.5.1.30
ping -a 10.5.1.32 10.5.1.31	# 不通
ping -a 10.5.1.32 10.5.1.34	# 不通

ping -a 10.5.1.32 10.5.129.30  
ping -a 10.5.1.32 10.5.34.30

ping -a 10.5.1.32 10.5.130.31	# 不通
ping -a 10.5.1.32 10.5.14.31	# 不通

ping -a 10.5.1.32 10.5.34.34
ping -a 10.5.1.32 10.5.14.34	# 不通

ping 10.5.1.31
ping 10.5.1.34
ping 10.5.130.31
ping 10.5.14.31
ping 10.5.14.34


由以上输出结果可知：AR32 的 LoopBack0 无法访问 AR34 的 GigabitEthernet0/0/1、LoopBack0 以及 AR31 的全部接口，故障真实发生，根据故障现象而上而下分层分析故障原因。

首先，检查 AR32 的路由表中是否存在 IS-IS 区域内的路由，判断是否存在控制层面故障。

2.2 检查 AR32 的路由表

在 AR32 上通过 display ip routing-table | include ASE 检查是否学习到 IS-IS 区域内的路由，输出结果如下：

由以上输出结果可知：AR32 的路由表中存在 IS-IS 区域内设备的路由信息，包括 AR34 的 GigabitEthernet0/0/1、LoopBack0 以及 AR31 的全部接口。

进一步检查 AR31 和 AR34 的路由表中是否存在 AR32 的 LoopBack0 地址的回包路由。

2.3 检查 AR31、AR34 的路由表

在 AR31、AR34 上通过 display ip routing-table 10.5.1.32 检查是否存在 AR32 的 LoopBack0 地址的回包路由，输出结果如下：

由以上输出结果可知：AR31 的路由表中存在 AR32 的 LoopBack0 地址的回包路由，AR34 的路由表中存在默认路由访问 AR32 的 LoopBack0 地址，说明 AR28 上的 OSPF 和 IS-IS 互相引入正确，初步排除控制层面故障，进一步检查数据转发层面是否存在故障。

2.4 判断是否基于目标 IP 地址的流量过滤

数据层面无法转发流量的原因有很多，首先考虑基于目标 IP 地址的流量过滤。

在 AR32 上不指定源地址去 ping 如下地址，检查 AR34 的 GigabitEthernet0/0/1、LoopBack0 以及 AR31 的全部接口，输出结果如下：

ping 10.5.1.31
ping 10.5.1.34
ping 10.5.130.31
ping 10.5.14.31
ping 10.5.14.34

由以上输出结果可知：AR28、AR31、AR34 没有配置基于目标地址为 AR34 的 GigabitEthernet0/0/1、LoopBack0 以及 AR31 的全部接口地址的流量过滤。

进一步判断沿途某些设备是否配置了针对源 IP 地址（AR32 的 LoopBack0）的流量过滤。

2.5 检查是否存在基于源 IP 地址的流量过滤

在 AR32 上使用自身 LoopBack0 为源地址，去 tracert IS-IS 区域设备的路由，输出结果如下：

tracert -a 10.5.1.32 10.5.1.31
tracert -a 10.5.1.32 10.5.1.34
tracert -a 10.5.1.32 10.5.130.31
tracert -a 10.5.1.32 10.5.14.31
tracert -a 10.5.1.32 10.5.14.34

由以上输出结果可知：AR32 指定源地址 tracert 的报文都是在 AR28 和 AR31 之间出现超时，初步判断 AR28 和 AR31 之间配置了基于源 IP 地址的流量过滤。

进一步判断上述流量过滤策略具体配置位置。

2.6 检查过滤策略配置具体位置

在 AR32 上以自身 LoopBack0 接口地址为源地址，去 ping AR31 直连 AR28 的接口 10.5.130.31 进行测试，同时在 AR31 查看 GigabitEthernet 0/0/2 接口的相关报文收发情况，做前后对比，输出结果如下：

由以上输出结果可知：AR32 上前后查看 GigabitEthernet 0/0/2 接口报文收发情况，input 方向收到单播报文为增加，由此判断 AR28 没有将数据包发送出去。

2.7 排查其他设备是否存在流量过滤策略

<AR31>display  acl all 
 Total quantity of nonempty ACL number is 0 

<AR34>display  acl all 
 Total quantity of nonempty ACL number is 0 

由以上输出结果可知，AR31 和 AR34 上本身没有定义流量过滤策略基本工具。

2.8 排查是否配置反向流量过滤策略

在 AR34 上针对 AR32 的 LoopBack0 地址做路由跟踪，测试反方向访问数据是否存在过滤行为，输出结果如下：


由以上输出结果可知：AR34 针对 AR32 的 LoopBack0 地址做路由跟踪是成功的，所以可以排除 AR34 和 AR32 的反方向的数据包过滤。

2.9 综合分析

综上所述，故障的根本原因是：AR28 的 GigabitEthernet 0/0/2 接口出方向配置了针对源 IP 地址为 AR32 的 LoopBack0 的流量过滤行为。

三、解决方案

3.1 在 AR28 上修改 ACL 放行相应的流量，执行如下命令：
system-view			// 进入系统视图
    interface GigabitEthernet 0/0/2	// 进入接口视图
    display this			// 查看当前接口下是否配置调用 acl 的过滤策略
    acl <对应 acl 序号>		// 进入 acl 视图
        rule permit source x.x.x.x x.x.x.x	// 放行相应的流量

执行完上述命令之后，在 AR32 上执行如下命令测试无法访问的 IP 地址，验证故障是否排除：
ping -a 10.5.1.32 10.5.1.31
ping -a 10.5.1.32 10.5.231.31
ping -a 10.5.1.32 10.5.234.31
ping -a 10.5.1.32 10.5.234.34

3.2 高可能性
如果仍有某些地址无法访问，则可能使用高级 ALC 过滤报文，需要执行如下命令：
system-view			// 进入系统视图
   display acl all			// 查看所有 acl
   acl <对应 acl 序号>		// 进入 acl 视图
       rule permit source x.x.x.x x.x.x.x	// 放行相应的流量

执行完上述命令之后，如果故障已经排除，则需要指导客户保存所有设备配置并提交上述故障排查报告：
return		// 返回用户视图
save		// 保存设备配置
y		// 确认保存配置

3.3 如果执行完上述命令之后，故障仍然发生，则需要客户提供完整的设备配置信息或派遣一线工程师到达客户现场进行故障排查，同时并拨打华为 400 服务热线请求华为专家的协助，谢谢！