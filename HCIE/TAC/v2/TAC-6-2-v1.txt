一、故障根因

AR30 的 GigabitEthernet 0/0/0 接口出向配置了针对源 IP 地址为 AR32 的 LoopBack0 流量过滤行为。

二、故障分析

2.1 故障重现

在 AR32 上使用自身 LoopBack0 接口地址为源，去 ping  IS-IS 区域中设备的 IP 地址，验证故障现象，这里只显示无法访问的，输出结果如下：

<AR32>ping -a 10.5.1.32 10.5.1.34
  PING 10.5.1.34: 56  data bytes, press CTRL_C to break
    Request time out
    Request time out
    Request time out
    Request time out
    Request time out

  --- 10.5.1.34 ping statistics ---
    5 packet(s) transmitted
    0 packet(s) received
    100.00% packet loss

<AR32>ping -a 10.5.1.32 10.5.34.34
  PING 10.5.34.34: 56  data bytes, press CTRL_C to break
    Request time out
    Request time out
    Request time out
    Request time out
    Request time out

  --- 10.5.34.34 ping statistics ---
    5 packet(s) transmitted
    0 packet(s) received
    100.00% packet loss

由以上结果可知：AR32 无法访问 AR34 的 GigabitEthernet0/0/0 接口和 LoopBack0 接口地址路由信息，故障真实发生，根据故障现象，自上而下分层分析故障原因。

首先检查 AR32 的路由表中是否存在 IS-IS 区域中设备的路由，判断控制层面是否存在故障。

2.2 检查 AR32 的路由表

在 AR32 上通过 display ip routing-table | include ASE 查看是否存在 IS-IS 区域设备的路由信息，输出结果如下：

<AR32>display ip routing-table | include ASE
Route Flags: R - relay, D - download to fib
------------------------------------------------------------------------------
Routing Tables: Public
         Destinations : 21       Routes : 21       

Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface

10.5.1.30/32  O_ASE   150  1           D   10.5.239.28     GigabitEthernet0/0/0
10.5.1.31/32  O_ASE   150  1           D   10.5.239.28     GigabitEthernet0/0/0
10.5.1.34/32  O_ASE   150  1           D   10.5.239.28     GigabitEthernet0/0/0
10.5.14.0/24  O_ASE   150  1           D   10.5.239.28     GigabitEthernet0/0/0
10.5.34.0/24  O_ASE   150  1           D   10.5.239.28     GigabitEthernet0/0/0
10.5.129.0/24  O_ASE   150  1           D   10.5.239.28     GigabitEthernet0/0/0
10.5.130.0/24  O_ASE   150  1           D   10.5.239.28     GigabitEthernet0/0/0

由以上输出结果可知：AR32 的路由表中包含 IS-IS 区域中所有路由信息，包括 AR34 的 GigabitEthernet0/0/0 接口和 LoopBack0 接口地址路由信息。

进一步检查 AR31 和 AR34 的路由表，判断是否有回包路由

2.3 检查 AR31 和 AR34 的路由表

<AR31>display ip routing-table 10.5.1.32
Route Flags: R - relay, D - download to fib
------------------------------------------------------------------------------
Routing Table : Public
Summary Count : 1
Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface

      10.5.1.32/32  ISIS-L2 15   74          D   10.5.231.28     GigabitEthernet0/0/2

<AR34>display ip routing-table 10.5.1.32
Route Flags: R - relay, D - download to fib
------------------------------------------------------------------------------
Routing Table : Public
Summary Count : 2
Destination/Mask    Proto   Pre  Cost      Flags NextHop         Interface

        0.0.0.0/0   ISIS-L1 15   10          D   10.5.234.31     GigabitEthernet0/0/1
                         ISIS-L1 15   10          D   10.5.134.30     GigabitEthernet0/0/0

由以上输出结果可知：AR31 的路由表中存在 AR32 的 LoopBack0 接口地址路由，AR34 的路由表中存在默认路由，说明 AR28 上的双向引入正确无误，初步排除控制层面故障，进一步检查数据转发层面是否存在故障。

2.4 检查是否基于目标 IP 地址的流量过滤行为

数据转发层面故障有很多，首先查看是否存在基于目标 IP 地址的流量过滤。

在 AR32 上不指定源地址，去 ping  如下地址，输出结果如下：

<AR32>ping 10.5.1.34
  PING 10.5.1.34: 56  data bytes, press CTRL_C to break
    Reply from 10.5.1.34: bytes=56 Sequence=1 ttl=253 time=40 ms
    Reply from 10.5.1.34: bytes=56 Sequence=2 ttl=253 time=20 ms
    Reply from 10.5.1.34: bytes=56 Sequence=3 ttl=253 time=30 ms
    Reply from 10.5.1.34: bytes=56 Sequence=4 ttl=253 time=30 ms
    Reply from 10.5.1.34: bytes=56 Sequence=5 ttl=253 time=20 ms

  --- 10.5.1.34 ping statistics ---
    5 packet(s) transmitted
    5 packet(s) received
    0.00% packet loss
    round-trip min/avg/max = 20/28/40 ms

<AR32>ping 10.5.34.34
  PING 10.5.34.34: 56  data bytes, press CTRL_C to break
    Reply from 10.5.34.34: bytes=56 Sequence=1 ttl=253 time=30 ms
    Reply from 10.5.34.34: bytes=56 Sequence=2 ttl=253 time=20 ms
    Reply from 10.5.34.34: bytes=56 Sequence=3 ttl=253 time=40 ms
    Reply from 10.5.34.34: bytes=56 Sequence=4 ttl=253 time=30 ms
    Reply from 10.5.34.34: bytes=56 Sequence=5 ttl=253 time=30 ms

  --- 10.5.34.34 ping statistics ---
    5 packet(s) transmitted
    5 packet(s) received
    0.00% packet loss
    round-trip min/avg/max = 20/30/40 ms

由以上输出结果可知：AR34 上并未存在基于目标 IP 地址的流量过滤行为，进一步检查是否存在基于 源 IP 地址（AR32 的 LoopBack0）的流量过滤行为。

2.5 检查是否存在基于源 IP 地址的流量过滤行为

在 AR32 上以自身 LoopBack0 地址为源去 tracert 验证，输出结果如下：

<AR32>tracert -a 10.5.1.32 10.5.1.34

 traceroute to  10.5.1.34(10.5.1.34), max hops: 30 ,packet length: 40,press CTRL
_C to break 

 1 10.5.239.28 10 ms  20 ms  10 ms 

 2 10.5.129.30 20 ms  30 ms  20 ms 

 3  *  *  * 

<AR32>tracert -a 10.5.1.32 10.5.34.34

 traceroute to  10.5.34.34(10.5.34.34), max hops: 30 ,packet length: 40,press CT
RL_C to break 

 1 10.5.239.28 20 ms  10 ms  30 ms 

 2 10.5.129.30 10 ms  30 ms  20 ms 

 3  *  *  * 

由以上输出结果可知：AR32 指定源地址的 tracert 报文都是在 AR28 和 AR31 之间出现超时，初步判断 AR28 和 AR31 之间基于源 IP 地址的流量过滤。

进一步检查源 IP 地址过滤行为配置位置

2.6 检查源 IP 地址过滤行为配置位置

在 AR32 上以自身 LoopBack0 为源，多次去 ping  AR34 的 GigabitEthernet0/0/0 接口地址，查看 AR32 的 GigabitEthernet0/0/0 接口报文增长情况，输出结果如下：

第一次：
<AR34>display interface GigabitEthernet 0/0/0
GigabitEthernet0/0/0 current state : UP
Line protocol current state : UP
<......略>

Input:  539 packets, 787686 bytes
  Unicast:                 12,  Multicast:                 525
  Broadcast:                2,  Jumbo:                       0
  Discard:                  0,  Total Error:                 0

  CRC:                      0,  Giants:                      0
  Jabbers:                  0,  Throttles:                   0
  Runts:                    0,  Symbols:                     0
  Ignoreds:                 0,  Frames:                      0

Output:  1569 packets, 1963451 bytes
  Unicast:                 21,  Multicast:                1545
  Broadcast:                3,  Jumbo:                       0
  Discard:                  0,  Total Error:                 0

  Collisions:               0,  ExcessiveCollisions:         0
  Late Collisions:          0,  Deferreds:                   0

第二次

<......略>
<AR34>display interface GigabitEthernet 0/0/0
GigabitEthernet0/0/0 current state : UP
Line protocol current state : UP

Input:  560 packets, 819480 bytes
  Unicast:                 12,  Multicast:                 546
  Broadcast:                2,  Jumbo:                       0
  Discard:                  0,  Total Error:                 0

  CRC:                      0,  Giants:                      0
  Jabbers:                  0,  Throttles:                   0
  Runts:                    0,  Symbols:                     0
  Ignoreds:                 0,  Frames:                      0

Output:  1635 packets, 2048173 bytes
  Unicast:                 21,  Multicast:                1611
  Broadcast:                3,  Jumbo:                       0
  Discard:                  0,  Total Error:                 0

  Collisions:               0,  ExcessiveCollisions:         0
  Late Collisions:          0,  Deferreds:                   0

由以上输出结果可知：AR32 的 GigabitEthernet0/0/0 接口状态为 UP，且多次 ping 之后，发现单播 Unicast 报文未增长，因此判断 AR30 的 GigabitEthernet0/0/0 针对源 IP 地址为 AR32 的 LoopBack0 地址的流量过滤行为。

2.7 检查是否配置反向流量过滤策略

在 AR34 上针对 AR32 的 LoopBack0 做路由跟踪，测试反方向访问数据是否存在过滤行为，输出结果如下：

<AR34>tracert -a 10.5.1.34 10.5.1.32

 traceroute to  10.5.1.32(10.5.1.32), max hops: 30 ,packet length: 40,press CTRL
_C to break 

 1 10.5.234.31 30 ms  20 ms  20 ms 
 2 10.5.231.28 20 ms  30 ms 10.5.230.28 20 ms 
 3 10.5.232.32 40 ms  20 ms  20 ms 

由以上输出结果可知：AR34 针对 AR32 的 LoopBack0 地址做路由跟踪是成功的，所以可以排除 AR34 和 AR32 的反方向数据包过滤。

2.8 综合分析

综上所述，故障的根本原因是：AR30 的 GitabitEthernet0/0/0 接口出向配置了针对源 IP 地址为 AR32 的 LoopBack0 流量过滤行为。

三、解决方案

3.1 在 AR28 上修改 ACL 放行相应的流量，执行如下命令：
system-view			// 进入系统视图
    interface GigabitEthernet 0/0/2	// 进入接口视图
    display this			// 查看当前接口下是否配置调用 acl 的过滤策略
    acl <对应 acl 序号>		// 进入 acl 视图
        rule permit source x.x.x.x x.x.x.x	// 放行相应的流量

执行完上述命令之后，在 AR32 上执行如下命令测试无法访问的 IP 地址，验证故障是否排除：
ping -a 10.5.1.32 10.5.1.34
ping -a 10.5.1.32 10.5.34.34

3.2 高可能性
如果仍有某些地址无法访问，则可能使用高级 ALC 过滤报文，需要执行如下命令：
system-view			// 进入系统视图
   display acl all			// 查看所有 acl
   acl <对应 acl 序号>		// 进入 acl 视图
       rule permit source x.x.x.x x.x.x.x	// 放行相应的流量

执行完上述命令之后，如果故障已经排除，则需要指导客户保存所有设备配置并提交上述故障排查报告：
return		// 返回用户视图
save		// 保存设备配置
y		// 确认保存配置

3.3 如果执行完上述命令之后，故障仍然发生，则需要客户提供完整的设备配置信息或派遣一线工程师到达客户现场进行故障排查，同时并拨打华为 400 服务热线请求华为专家的协助，谢谢！

